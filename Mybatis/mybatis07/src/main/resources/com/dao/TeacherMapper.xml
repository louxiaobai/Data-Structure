<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!--核心配置文件-->
<mapper namespace="com.dao.TeacherMapper">
<!--    按照结果嵌套查询-->

    <select id="getTeacher" resultMap="TeacherStudent">
       SELECT  s.id sid, s.name sname,t.id tid ,t.name tname FROM
       teacher t,student s where
       s.tid=t.id and t.id=${tid}
    </select>

    <resultMap id="TeacherStudent" type="Teacher">
        <result property="id" column="tid"/>
        <result property="name" column="tname"/>
        <!--        复杂的属性我们需要单独去处理
                    对象:association
                    集合:collection
                    javaType="":指定属性的类型
                    集合中的范型信息,我们使用ofType
            -->
        <collection property="students" ofType="Student">
            <result property="id" column="sid"/>
            <result property="name" column="sname"/>
            <result property="tid" column="tid"/>
        </collection>
    </resultMap>

<!--    按照查询嵌套进行处理-->

    <select id="getTeacher2" resultMap="TeacherStudent2">

            select * from  teacher where id=#{tid}

    </select>

    <resultMap id="TeacherStudent2" type="Teacher">

        <collection property="students" javaType="Arraylist" ofType="Student" select="getStudentByTeacherId" column="id"/>

    </resultMap>


    <select id="getStudentByTeacherId" resultType="Student">

            select * from student where tid=#{tid};

    </select>






</mapper>